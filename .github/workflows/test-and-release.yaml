name: Test and Release

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-central-1
  AWS_DEFAULT_REGION: eu-central-1
  CI: 1
  FORCE_COLOR: 3
  STACK_NAME: pll-${{ github.sha }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: Cache AWS CLI
        id: cache-aws-cli
        uses: actions/cache@v2
        with:
          path: aws/
          key: ${{ runner.OS }}-cache-aws-cli
      - name: Install AWS
        if: steps.cache-aws-cli.outputs.cache-hit != 'true'
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Compile source
        run: npx tsc
      - name: Set up stack for tests
        run: |
          npx cdk bootstrap aws://`aws sts get-caller-identity | jq -r '.Account' | tr -d '\n'`/${{ env.AWS_REGION }}
          npx cdk -a 'node dist/cdk/cloudformation-sourcecode.js' deploy
          npx cdk -a 'node dist/cdk/cloudformation.js' deploy --require-approval never
      - name: Run tests
        run: npm test
      - name: Semantic release
        run: npx semantic-release
      - name: Clean up test resources
        if: always()
        run: |
          npx cdk -a 'node dist/cdk/cloudformation.js' destroy -f '*'
          # Delete sourcecode bucket
          SOURCE_CODE_BUCKET=`aws cloudformation describe-stacks --stack-name $STACK_NAME-sourcecode | jq -r '.Stacks[0].Outputs[] | select(.OutputKey == "bucketName") | .OutputValue'`
          aws s3 rb s3://$SOURCE_CODE_BUCKET --force
          # Delete the sourceode stack
          npx cdk -a 'node dist/cdk/cloudformation-sourcecode.js' destroy -f '*'
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: lambdas-${{ github.sha }}
          path: dist/**/*.zip
